# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('MCA finished')
IND = get_mca_ind(result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights.csv",sep=""))
VAR = get_mca_var(result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights.csv",sep=""))
eig.val = get_eigenvalue(result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues.csv",sep=""))
#------------------------------------------------------------
result["svd"]
result["call"]
result["var"]
result$var$contrib
result$var$coord
results
result
result$call
result$eig
summary.MCA
summary.results
summary.result
summary(result)
result$var$coord
size(result$var$coord)
dim(result$var$coord)
dim(result$var$contrib)
dim(result$var$cos2)
dim(result$var$eta2)
dim(result$eig)
dim(result$svd)
dim(result$call)
dim(result$svd$U)
dim(result$svd$V)
predict.MCA(result,data[1,:])
predict.MCA(result,data)
x = data[1]
x = data[1,]
predict.MCA(result,x)
x = data.frame(lapply(x,as.factor))
predict.MCA(result,x)
dim(result$svd$U)
dim(result$svd$V)
dim(result$svd$vs)
open MCA
MCA
x = data[17,]
predict.MCA(result,x)
data2 = read.csv(IN, header = FALSE)
data2 = data.frame(lapply(data2, as.factor)) #convert data
X <- data[17,]
predict.MCA(result,X)
predict.MCA(data,X)
x = result$call$X[17,]
predict.MCA(data,x)
predict.MCA(result,x)
dim(data)
dim(data)[1]
for (sub in c(1:dim(data[1]))){
print(sub)
}
for (sub in c(1:dim(data[1]))){
print(sub)
}
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(sub)
}
n_sub
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
}
sub=1
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
LOO_left_out_result = predict.MCA(LOO_result,left_out)
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
sub=1
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
LOO_left_out_result = predict.MCA(LOO_result,left_out)
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('MCA finished')
IND = get_mca_ind(result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights.csv",sep=""))
VAR = get_mca_var(result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights.csv",sep=""))
eig.val = get_eigenvalue(result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues.csv",sep=""))
#------------------------------------------------------------
left_out = result$call$X[1,]
LOO_left_out_result = predict.MCA(result,left_out)
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_leftoutTEST.csv",sep=""))
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
}
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
}
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(LOO_result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(LOO_result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(LOO_result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
}
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
#IN = "/projects/sw49/Results/MCA/MCAinput.csv"
#IN2 = '/projects/sw49/Results/MCA/MCAcomp.csv'
#OUT= "/projects/sw49/Results/MCA/"
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(LOO_result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(LOO_result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(LOO_result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
write.mat(IND$coord, filename="test-compressed.mat", compression=TRUE, version="MAT5")
}
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
library("Matrix")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(LOO_result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(LOO_result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(LOO_result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
write.mat(IND$coord, filename="test-compressed.mat", compression=TRUE, version="MAT5")
}
library("Matrix")
install.packages("Matrix")
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(LOO_result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(LOO_result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(LOO_result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
}
# http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/114-mca-multiple-correspondence-analysis-in-r-essentials/
# this is code to perform MCA on binarized lesion data
rm(list=ls())
library("FactoMineR")
library("factoextra")
# HARDCODED VARIABLES------------#
# have not found a sensible way of calling R from matlab with variables...
IN = "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAinput.csv"
IN2 = '/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/MCAcomp.csv'
OUT= "/Users/luke/Documents/Projects/StrokeNet/Docs/Results/MCA/"
# -------------------------------#
#------------------------------------------------------------
comps = read.csv(IN2)
data = read.csv(IN, header = FALSE)
data = data.frame(lapply(data, as.factor)) #convert data
print('data loaded')
result = MCA(data,ncp = comps[2], graph = FALSE) #do the MCA
print('Initial MCA finished')
#------------------------------------------------------------
n_sub = dim(data[1])
for (sub in c(1:n_sub)){
print(paste("Running LOO for",sub))
left_out = result$call$X[sub,]
left_in  = data[-c(sub), ]
#re run the MCA
LOO_result = MCA(left_in,ncp = comps[2], graph = FALSE) #do the MCA
#predict the left out
LOO_left_out_result = predict.MCA(LOO_result,left_out)
IND = get_mca_ind(LOO_result) # get individual weights
write.csv(IND$coord, file = paste(OUT,"MCA_IndWeights_LO",sub,".csv",sep=""))
write.csv(LOO_left_out_result$coord, file = paste(OUT,"MCA_LO",sub,"_vec.csv",sep=""))
VAR = get_mca_var(LOO_result) # get variable (connection) weights
write.csv(VAR$coord, file = paste(OUT,"MCA_VarWeights_LO",sub,".csv",sep=""))
eig.val = get_eigenvalue(LOO_result) #get variance explained
write.csv(eig.val, file = paste(OUT,"MCA_Eigenvalues_LO",sub,".csv",sep=""))
}
